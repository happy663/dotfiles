{
  "env": {
    "CLAUDE_CODE_ENABLE_TELEMETRY": "0",
    "DISABLE_COST_WARNINGS": "1",
    "BASH_DEFAULT_TIMEOUT_MS": "9600000",
    "BASH_MAX_TIMEOUT_MS": "9600000"
  },
  "permissions": {
    "allow": [
      "List(*)",
      "Fetch(https://*)",
      "Read(*)",
      "Read(~/.zshrc)",
      "Read(~/src/github.com/**)",
      "Read(~/dotfiles/**)",
      "Read($(ghq root)/**)",
      "Bash(ls:*)",
      "Bash(rg:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(terminal-notifier:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(gh auth status:*)",
      "Bash(gh repo view:*)",
      "Bash(gh repo list:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr status:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh browse:*)",
      "Bash(gh config list:*)",
      "Bash(gh api user:*)",
      "Bash(gh release list:*)",
      "Bash(gh release view:*)",
      "Bash(ghq list:*)",
      "Bash(ghq root:*)",
      "Bash(cd:*)",
      "Bash(echo:*)",
      "Bash(date:*)",
      "Bash(hostname:*)",
      "Bash(vm_stat:*)",
      "Bash(basename:*)",
      "Bash(dirname:*)",
      "Bash(wc:*)",
      "Bash(tr:*)",
      "Bash(awk:*)",
      "Bash(grep:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__list_dir",
      "mcp__serena__find_file",
      "mcp__serena__find_symbol",
      "mcp__serena__replace_regex",
      "Bash(rustc --version)",
      "Bash(rustup toolchain:*)",
      "Bash(cargo clean:*)",
      "Bash(cargo build:*)",
      "Bash(cargo --version)",
      "Bash(brew list:*)",
      "Bash(mise list:*)",
      "Bash(mise plugin:*)",
      "Bash(mise use:*)",
      "Bash(mise exec rust@nightly:*)",
      "Bash(mise bin-paths:*)",
      "Bash(nvim:*)",
      "Bash(npx ccusage:*)"
    ],
    "deny": [
      "Bash(rm:*)",
      "Bash(rm -rf:*)"
    ]
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"Claude Code: $(jq -r '.tool_name')\" | terminal-notifier -title 'Claude Code' -sound 'Blow'"
          },
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path | select(endswith(\".lua\"))' | xargs -r stylua"
          },
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path | select(endswith(\".json\"))' | xargs -r npx prettier --write "
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo \"Claude Code: $(jq -r '.hook_event_name')\" | terminal-notifier -title 'Claude Code' -sound 'Blow'"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo \"Claude Code: $(jq -r '.message')\" | terminal-notifier -title 'Claude Code'"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "bash ~/.claude/statusline-script.sh"
  }
}